type Poseidon = Poseidon [storable: true, drop: false, dup: false, zero_sized: false];
type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<felt252, felt252, felt252> = Struct<ut@Tuple, felt252, felt252, felt252> [storable: true, drop: true, dup: true, zero_sized: false];

libfunc hades_permutation = hades_permutation;
libfunc struct_construct<Tuple<felt252, felt252, felt252>> = struct_construct<Tuple<felt252, felt252, felt252>>;
libfunc store_temp<Poseidon> = store_temp<Poseidon>;
libfunc store_temp<Tuple<felt252, felt252, felt252>> = store_temp<Tuple<felt252, felt252, felt252>>;

F0:
hades_permutation([0], [1], [2], [3]) -> ([4], [5], [6], [7]);
struct_construct<Tuple<felt252, felt252, felt252>>([5], [6], [7]) -> ([8]);
store_temp<Poseidon>([4]) -> ([4]);
store_temp<Tuple<felt252, felt252, felt252>>([8]) -> ([8]);
return([4], [8]);

test::foo@F0([0]: Poseidon, [1]: felt252, [2]: felt252, [3]: felt252) -> (Poseidon, Tuple<felt252, felt252, felt252>);