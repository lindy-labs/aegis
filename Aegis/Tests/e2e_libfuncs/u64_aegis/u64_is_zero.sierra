type u64 = u64 [storable: true, drop: true, dup: true, zero_sized: false];
type Const<u64, 1234> = Const<u64, 1234> [storable: false, drop: false, dup: false, zero_sized: false];
type NonZero<u64> = NonZero<u64> [storable: true, drop: true, dup: true, zero_sized: false];

libfunc u64_is_zero = u64_is_zero;
libfunc branch_align = branch_align;
libfunc const_as_immediate<Const<u64, 1234>> = const_as_immediate<Const<u64, 1234>>;
libfunc store_temp<u64> = store_temp<u64>;
libfunc unwrap_non_zero<u64> = unwrap_non_zero<u64>;

F0:
u64_is_zero([0]) { fallthrough() F0_B0([1]) };
branch_align() -> ();
const_as_immediate<Const<u64, 1234>>() -> ([2]);
store_temp<u64>([2]) -> ([2]);
return([2]);
F0_B0:
branch_align() -> ();
unwrap_non_zero<u64>([1]) -> ([3]);
store_temp<u64>([3]) -> ([3]);
return([3]);

test::foo@F0([0]: u64) -> (u64);