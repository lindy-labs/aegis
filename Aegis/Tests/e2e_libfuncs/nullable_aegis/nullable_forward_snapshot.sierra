type Nullable<Array<felt252>> = Nullable<Array<felt252>> [storable: true, drop: true, dup: false, zero_sized: false];
type Snapshot<Nullable<Array<felt252>>> = Snapshot<Nullable<Array<felt252>>> [storable: true, drop: true, dup: true, zero_sized: false];
type Nullable<Snapshot<Array<felt252>>> = Nullable<Snapshot<Array<felt252>>> [storable: true, drop: true, dup: true, zero_sized: false];
type Array<felt252> = Array<felt252> [storable: true, drop: true, dup: false, zero_sized: false];
type Snapshot<Array<felt252>> = Snapshot<Array<felt252>> [storable: true, drop: true, dup: true, zero_sized: false];
type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];

libfunc nullable_forward_snapshot<Array<felt252>> = nullable_forward_snapshot<Array<felt252>>;
libfunc store_temp<Nullable<Snapshot<Array<felt252>>>> = store_temp<Nullable<Snapshot<Array<felt252>>>>;

nullable_forward_snapshot<Array<felt252>>([0]) -> ([1]); // 0
store_temp<Nullable<Snapshot<Array<felt252>>>>([1]) -> ([1]); // 1
return([1]); // 2

test::foo@0([0]: Snapshot<Nullable<Array<felt252>>>) -> (Nullable<Snapshot<Array<felt252>>>);