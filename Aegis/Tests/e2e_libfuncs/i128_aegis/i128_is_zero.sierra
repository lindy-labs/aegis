type i128 = i128 [storable: true, drop: true, dup: true, zero_sized: false];
type NonZero<i128> = NonZero<i128> [storable: true, drop: true, dup: true, zero_sized: false];

libfunc i128_is_zero = i128_is_zero;
libfunc branch_align = branch_align;
libfunc i128_const<123> = i128_const<123>;
libfunc store_temp<i128> = store_temp<i128>;
libfunc unwrap_non_zero<i128> = unwrap_non_zero<i128>;

i128_is_zero([0]) { fallthrough() 5([1]) }; // 0
branch_align() -> (); // 1
i128_const<123>() -> ([2]); // 2
store_temp<i128>([2]) -> ([2]); // 3
return([2]); // 4
branch_align() -> (); // 5
unwrap_non_zero<i128>([1]) -> ([3]); // 6
store_temp<i128>([3]) -> ([3]); // 7
return([3]); // 8

test::foo@0([0]: i128) -> (i128);