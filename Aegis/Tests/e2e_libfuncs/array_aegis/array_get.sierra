type RangeCheck = RangeCheck [storable: true, drop: false, dup: false, zero_sized: false];
type Unit = Struct<ut@Tuple> [storable: true, drop: true, dup: true, zero_sized: true];
type Box<Snapshot<Array<felt252>>> = Box<Snapshot<Array<felt252>>> [storable: true, drop: true, dup: true, zero_sized: false];
type core::option::Option::<core::box::Box::<@core::array::Array::<core::felt252>>> = Enum<ut@core::option::Option::<core::box::Box::<@core::array::Array::<core::felt252>>>, Box<Snapshot<Array<felt252>>>, Unit> [storable: true, drop: true, dup: true, zero_sized: false];
type Array<felt252> = Array<felt252> [storable: true, drop: true, dup: false, zero_sized: false];
type Snapshot<Array<felt252>> = Snapshot<Array<felt252>> [storable: true, drop: true, dup: true, zero_sized: false];
type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type u32 = u32 [storable: true, drop: true, dup: true, zero_sized: false];
type Array<Array<felt252>> = Array<Array<felt252>> [storable: true, drop: true, dup: false, zero_sized: false];
type Snapshot<Array<Array<felt252>>> = Snapshot<Array<Array<felt252>>> [storable: true, drop: true, dup: true, zero_sized: false];

libfunc array_get<Array<felt252>> = array_get<Array<felt252>>;
libfunc branch_align = branch_align;
libfunc enum_init<core::option::Option::<core::box::Box::<@core::array::Array::<core::felt252>>>, 0> = enum_init<core::option::Option::<core::box::Box::<@core::array::Array::<core::felt252>>>, 0>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<core::option::Option::<core::box::Box::<@core::array::Array::<core::felt252>>>> = store_temp<core::option::Option::<core::box::Box::<@core::array::Array::<core::felt252>>>>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::option::Option::<core::box::Box::<@core::array::Array::<core::felt252>>>, 1> = enum_init<core::option::Option::<core::box::Box::<@core::array::Array::<core::felt252>>>, 1>;

F0:
array_get<Array<felt252>>([0], [1], [2]) { fallthrough([3], [4]) F0_B0([5]) };
branch_align() -> ();
enum_init<core::option::Option::<core::box::Box::<@core::array::Array::<core::felt252>>>, 0>([4]) -> ([6]);
store_temp<RangeCheck>([3]) -> ([3]);
store_temp<core::option::Option::<core::box::Box::<@core::array::Array::<core::felt252>>>>([6]) -> ([6]);
return([3], [6]);
F0_B0:
branch_align() -> ();
struct_construct<Unit>() -> ([7]);
enum_init<core::option::Option::<core::box::Box::<@core::array::Array::<core::felt252>>>, 1>([7]) -> ([8]);
store_temp<RangeCheck>([5]) -> ([5]);
store_temp<core::option::Option::<core::box::Box::<@core::array::Array::<core::felt252>>>>([8]) -> ([8]);
return([5], [8]);

test::foo@F0([0]: RangeCheck, [1]: Snapshot<Array<Array<felt252>>>, [2]: u32) -> (RangeCheck, core::option::Option::<core::box::Box::<@core::array::Array::<core::felt252>>>);