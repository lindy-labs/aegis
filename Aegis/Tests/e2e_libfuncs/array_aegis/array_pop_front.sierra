type Array<felt252> = Array<felt252> [storable: true, drop: true, dup: false, zero_sized: false];
type Unit = Struct<ut@Tuple> [storable: true, drop: true, dup: true, zero_sized: true];
type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type Box<felt252> = Box<felt252> [storable: true, drop: true, dup: true, zero_sized: false];
type core::option::Option::<core::box::Box::<core::felt252>> = Enum<ut@core::option::Option::<core::box::Box::<core::felt252>>, Box<felt252>, Unit> [storable: true, drop: true, dup: true, zero_sized: false];

libfunc array_pop_front<felt252> = array_pop_front<felt252>;
libfunc branch_align = branch_align;
libfunc enum_init<core::option::Option::<core::box::Box::<core::felt252>>, 0> = enum_init<core::option::Option::<core::box::Box::<core::felt252>>, 0>;
libfunc store_temp<Array<felt252>> = store_temp<Array<felt252>>;
libfunc store_temp<core::option::Option::<core::box::Box::<core::felt252>>> = store_temp<core::option::Option::<core::box::Box::<core::felt252>>>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::option::Option::<core::box::Box::<core::felt252>>, 1> = enum_init<core::option::Option::<core::box::Box::<core::felt252>>, 1>;

array_pop_front<felt252>([0]) { fallthrough([1], [2]) 6([3]) }; // 0
branch_align() -> (); // 1
enum_init<core::option::Option::<core::box::Box::<core::felt252>>, 0>([2]) -> ([4]); // 2
store_temp<Array<felt252>>([1]) -> ([1]); // 3
store_temp<core::option::Option::<core::box::Box::<core::felt252>>>([4]) -> ([4]); // 4
return([1], [4]); // 5
branch_align() -> (); // 6
struct_construct<Unit>() -> ([5]); // 7
enum_init<core::option::Option::<core::box::Box::<core::felt252>>, 1>([5]) -> ([6]); // 8
store_temp<Array<felt252>>([3]) -> ([3]); // 9
store_temp<core::option::Option::<core::box::Box::<core::felt252>>>([6]) -> ([6]); // 10
return([3], [6]); // 11

test::foo@0([0]: Array<felt252>) -> (Array<felt252>, core::option::Option::<core::box::Box::<core::felt252>>);