type RangeCheck = RangeCheck [storable: true, drop: false, dup: false, zero_sized: false];
type u128 = u128 [storable: true, drop: true, dup: true, zero_sized: false];
type core::integer::u256 = Struct<ut@core::integer::u256, u128, u128> [storable: true, drop: true, dup: true, zero_sized: false];

libfunc u256_sqrt = u256_sqrt;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<u128> = store_temp<u128>;

u256_sqrt([0], [1]) -> ([2], [3]); // 0
store_temp<RangeCheck>([2]) -> ([2]); // 1
store_temp<u128>([3]) -> ([3]); // 2
return([2], [3]); // 3

test::foo@0([0]: RangeCheck, [1]: core::integer::u256) -> (RangeCheck, u128);