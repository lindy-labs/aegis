type RangeCheck = RangeCheck [storable: true, drop: false, dup: false, zero_sized: false];
type Unit = Struct<ut@Tuple> [storable: true, drop: true, dup: true, zero_sized: true];
type u128 = u128 [storable: true, drop: true, dup: true, zero_sized: false];
type core::integer::u256 = Struct<ut@core::integer::u256, u128, u128> [storable: true, drop: true, dup: true, zero_sized: false];
type NonZero<core::integer::u256> = NonZero<core::integer::u256> [storable: true, drop: true, dup: true, zero_sized: false];
type core::option::Option::<core::zeroable::NonZero::<core::integer::u256>> = Enum<ut@core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, NonZero<core::integer::u256>, Unit> [storable: true, drop: true, dup: true, zero_sized: false];
type U128MulGuarantee = U128MulGuarantee [storable: true, drop: false, dup: false, zero_sized: false];

libfunc u256_guarantee_inv_mod_n = u256_guarantee_inv_mod_n;
libfunc branch_align = branch_align;
libfunc u128_mul_guarantee_verify = u128_mul_guarantee_verify;
libfunc enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 0> = enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 0>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>> = store_temp<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 1> = enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 1>;

u256_guarantee_inv_mod_n([0], [1], [2]) { fallthrough([3], [4], [5], [6], [7], [8], [9], [10], [11], [12]) 14([13], [14], [15]) }; // 0
branch_align() -> (); // 1
u128_mul_guarantee_verify([3], [12]) -> ([16]); // 2
u128_mul_guarantee_verify([16], [11]) -> ([17]); // 3
u128_mul_guarantee_verify([17], [10]) -> ([18]); // 4
u128_mul_guarantee_verify([18], [9]) -> ([19]); // 5
u128_mul_guarantee_verify([19], [8]) -> ([20]); // 6
u128_mul_guarantee_verify([20], [7]) -> ([21]); // 7
u128_mul_guarantee_verify([21], [6]) -> ([22]); // 8
u128_mul_guarantee_verify([22], [5]) -> ([23]); // 9
enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 0>([4]) -> ([24]); // 10
store_temp<RangeCheck>([23]) -> ([23]); // 11
store_temp<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>([24]) -> ([24]); // 12
return([23], [24]); // 13
branch_align() -> (); // 14
u128_mul_guarantee_verify([13], [15]) -> ([25]); // 15
u128_mul_guarantee_verify([25], [14]) -> ([26]); // 16
struct_construct<Unit>() -> ([27]); // 17
enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 1>([27]) -> ([28]); // 18
store_temp<RangeCheck>([26]) -> ([26]); // 19
store_temp<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>([28]) -> ([28]); // 20
return([26], [28]); // 21

test::foo@0([0]: RangeCheck, [1]: core::integer::u256, [2]: NonZero<core::integer::u256>) -> (RangeCheck, core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>);