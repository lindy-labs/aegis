type u8 = u8 [storable: true, drop: true, dup: true, zero_sized: false];
type NonZero<u8> = NonZero<u8> [storable: true, drop: true, dup: true, zero_sized: false];

libfunc u8_is_zero = u8_is_zero;
libfunc branch_align = branch_align;
libfunc u8_const<123> = u8_const<123>;
libfunc store_temp<u8> = store_temp<u8>;
libfunc unwrap_non_zero<u8> = unwrap_non_zero<u8>;

u8_is_zero([0]) { fallthrough() 5([1]) }; // 0
branch_align() -> (); // 1
u8_const<123>() -> ([2]); // 2
store_temp<u8>([2]) -> ([2]); // 3
return([2]); // 4
branch_align() -> (); // 5
unwrap_non_zero<u8>([1]) -> ([3]); // 6
store_temp<u8>([3]) -> ([3]); // 7
return([3]); // 8

test::foo@0([0]: u8) -> (u8);