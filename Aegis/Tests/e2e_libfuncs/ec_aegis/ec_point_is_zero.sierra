type EcPoint = EcPoint [storable: true, drop: true, dup: true, zero_sized: false];
type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type NonZero<EcPoint> = NonZero<EcPoint> [storable: true, drop: true, dup: true, zero_sized: false];

libfunc ec_point_is_zero = ec_point_is_zero;
libfunc branch_align = branch_align;
libfunc felt252_const<1> = felt252_const<1>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc ec_point_unwrap = ec_point_unwrap;
libfunc drop<felt252> = drop<felt252>;

ec_point_is_zero([0]) { fallthrough() 5([1]) }; // 0
branch_align() -> (); // 1
felt252_const<1>() -> ([2]); // 2
store_temp<felt252>([2]) -> ([2]); // 3
return([2]); // 4
branch_align() -> (); // 5
ec_point_unwrap([1]) -> ([3], [4]); // 6
drop<felt252>([4]) -> (); // 7
store_temp<felt252>([3]) -> ([3]); // 8
return([3]); // 9

test::foo@0([0]: EcPoint) -> (felt252);