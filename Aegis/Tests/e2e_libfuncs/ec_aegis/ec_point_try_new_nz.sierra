type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type Unit = Struct<ut@Tuple> [storable: true, drop: true, dup: true, zero_sized: true];
type EcPoint = EcPoint [storable: true, drop: true, dup: true, zero_sized: false];
type NonZero<EcPoint> = NonZero<EcPoint> [storable: true, drop: true, dup: true, zero_sized: false];
type core::option::Option::<core::zeroable::NonZero::<core::ec::EcPoint>> = Enum<ut@core::option::Option::<core::zeroable::NonZero::<core::ec::EcPoint>>, NonZero<EcPoint>, Unit> [storable: true, drop: true, dup: true, zero_sized: false];

libfunc ec_point_try_new_nz = ec_point_try_new_nz;
libfunc branch_align = branch_align;
libfunc enum_init<core::option::Option::<core::zeroable::NonZero::<core::ec::EcPoint>>, 0> = enum_init<core::option::Option::<core::zeroable::NonZero::<core::ec::EcPoint>>, 0>;
libfunc store_temp<core::option::Option::<core::zeroable::NonZero::<core::ec::EcPoint>>> = store_temp<core::option::Option::<core::zeroable::NonZero::<core::ec::EcPoint>>>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::option::Option::<core::zeroable::NonZero::<core::ec::EcPoint>>, 1> = enum_init<core::option::Option::<core::zeroable::NonZero::<core::ec::EcPoint>>, 1>;

ec_point_try_new_nz([0], [1]) { fallthrough([2]) 5() }; // 0
branch_align() -> (); // 1
enum_init<core::option::Option::<core::zeroable::NonZero::<core::ec::EcPoint>>, 0>([2]) -> ([3]); // 2
store_temp<core::option::Option::<core::zeroable::NonZero::<core::ec::EcPoint>>>([3]) -> ([3]); // 3
return([3]); // 4
branch_align() -> (); // 5
struct_construct<Unit>() -> ([4]); // 6
enum_init<core::option::Option::<core::zeroable::NonZero::<core::ec::EcPoint>>, 1>([4]) -> ([5]); // 7
store_temp<core::option::Option::<core::zeroable::NonZero::<core::ec::EcPoint>>>([5]) -> ([5]); // 8
return([5]); // 9

test::foo@0([0]: felt252, [1]: felt252) -> (core::option::Option::<core::zeroable::NonZero::<core::ec::EcPoint>>);