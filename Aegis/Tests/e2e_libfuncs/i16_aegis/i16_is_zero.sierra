type i16 = i16 [storable: true, drop: true, dup: true, zero_sized: false];
type NonZero<i16> = NonZero<i16> [storable: true, drop: true, dup: true, zero_sized: false];

libfunc i16_is_zero = i16_is_zero;
libfunc branch_align = branch_align;
libfunc i16_const<123> = i16_const<123>;
libfunc store_temp<i16> = store_temp<i16>;
libfunc unwrap_non_zero<i16> = unwrap_non_zero<i16>;

i16_is_zero([0]) { fallthrough() 5([1]) }; // 0
branch_align() -> (); // 1
i16_const<123>() -> ([2]); // 2
store_temp<i16>([2]) -> ([2]); // 3
return([2]); // 4
branch_align() -> (); // 5
unwrap_non_zero<i16>([1]) -> ([3]); // 6
store_temp<i16>([3]) -> ([3]); // 7
return([3]); // 8

test::foo@0([0]: i16) -> (i16);