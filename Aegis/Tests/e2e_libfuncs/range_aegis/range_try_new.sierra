type RangeCheck = RangeCheck [storable: true, drop: false, dup: false, zero_sized: false];
type IntRange<i16> = IntRange<i16> [storable: true, drop: true, dup: true, zero_sized: false];
type core::result::Result::<core::ops::range::internal::IntRange::<core::integer::i16>, core::ops::range::internal::IntRange::<core::integer::i16>> = Enum<ut@core::result::Result::<core::ops::range::internal::IntRange::<core::integer::i16>, core::ops::range::internal::IntRange::<core::integer::i16>>, IntRange<i16>, IntRange<i16>> [storable: true, drop: true, dup: true, zero_sized: false];
type i16 = i16 [storable: true, drop: true, dup: true, zero_sized: false];

libfunc int_range_try_new<i16> = int_range_try_new<i16>;
libfunc branch_align = branch_align;
libfunc enum_init<core::result::Result::<core::ops::range::internal::IntRange::<core::integer::i16>, core::ops::range::internal::IntRange::<core::integer::i16>>, 0> = enum_init<core::result::Result::<core::ops::range::internal::IntRange::<core::integer::i16>, core::ops::range::internal::IntRange::<core::integer::i16>>, 0>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<core::result::Result::<core::ops::range::internal::IntRange::<core::integer::i16>, core::ops::range::internal::IntRange::<core::integer::i16>>> = store_temp<core::result::Result::<core::ops::range::internal::IntRange::<core::integer::i16>, core::ops::range::internal::IntRange::<core::integer::i16>>>;
libfunc enum_init<core::result::Result::<core::ops::range::internal::IntRange::<core::integer::i16>, core::ops::range::internal::IntRange::<core::integer::i16>>, 1> = enum_init<core::result::Result::<core::ops::range::internal::IntRange::<core::integer::i16>, core::ops::range::internal::IntRange::<core::integer::i16>>, 1>;

F0:
int_range_try_new<i16>([0], [1], [2]) { fallthrough([3], [4]) F0_B0([5], [6]) };
branch_align() -> ();
enum_init<core::result::Result::<core::ops::range::internal::IntRange::<core::integer::i16>, core::ops::range::internal::IntRange::<core::integer::i16>>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([3]);
store_temp<core::result::Result::<core::ops::range::internal::IntRange::<core::integer::i16>, core::ops::range::internal::IntRange::<core::integer::i16>>>([7]) -> ([7]);
return([3], [7]);
F0_B0:
branch_align() -> ();
enum_init<core::result::Result::<core::ops::range::internal::IntRange::<core::integer::i16>, core::ops::range::internal::IntRange::<core::integer::i16>>, 1>([6]) -> ([8]);
store_temp<RangeCheck>([5]) -> ([5]);
store_temp<core::result::Result::<core::ops::range::internal::IntRange::<core::integer::i16>, core::ops::range::internal::IntRange::<core::integer::i16>>>([8]) -> ([8]);
return([5], [8]);

test::foo@F0([0]: RangeCheck, [1]: i16, [2]: i16) -> (RangeCheck, core::result::Result::<core::ops::range::internal::IntRange::<core::integer::i16>, core::ops::range::internal::IntRange::<core::integer::i16>>);