type Bitwise = Bitwise [storable: true, drop: false, dup: false, zero_sized: false];
type u64 = u64 [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<u64, u64, u64> = Struct<ut@Tuple, u64, u64, u64> [storable: true, drop: true, dup: true, zero_sized: false];

libfunc u64_bitwise = u64_bitwise;
libfunc struct_construct<Tuple<u64, u64, u64>> = struct_construct<Tuple<u64, u64, u64>>;
libfunc store_temp<Bitwise> = store_temp<Bitwise>;
libfunc store_temp<Tuple<u64, u64, u64>> = store_temp<Tuple<u64, u64, u64>>;

u64_bitwise([0], [1], [2]) -> ([3], [4], [5], [6]); // 0
struct_construct<Tuple<u64, u64, u64>>([4], [5], [6]) -> ([7]); // 1
store_temp<Bitwise>([3]) -> ([3]); // 2
store_temp<Tuple<u64, u64, u64>>([7]) -> ([7]); // 3
return([3], [7]); // 4

test::foo@0([0]: Bitwise, [1]: u64, [2]: u64) -> (Bitwise, Tuple<u64, u64, u64>);