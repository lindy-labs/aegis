type Bitwise = Bitwise [storable: true, drop: false, dup: false, zero_sized: false];
type u16 = u16 [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<u16, u16, u16> = Struct<ut@Tuple, u16, u16, u16> [storable: true, drop: true, dup: true, zero_sized: false];

libfunc u16_bitwise = u16_bitwise;
libfunc struct_construct<Tuple<u16, u16, u16>> = struct_construct<Tuple<u16, u16, u16>>;
libfunc store_temp<Bitwise> = store_temp<Bitwise>;
libfunc store_temp<Tuple<u16, u16, u16>> = store_temp<Tuple<u16, u16, u16>>;

u16_bitwise([0], [1], [2]) -> ([3], [4], [5], [6]); // 0
struct_construct<Tuple<u16, u16, u16>>([4], [5], [6]) -> ([7]); // 1
store_temp<Bitwise>([3]) -> ([3]); // 2
store_temp<Tuple<u16, u16, u16>>([7]) -> ([7]); // 3
return([3], [7]); // 4

test::foo@0([0]: Bitwise, [1]: u16, [2]: u16) -> (Bitwise, Tuple<u16, u16, u16>);