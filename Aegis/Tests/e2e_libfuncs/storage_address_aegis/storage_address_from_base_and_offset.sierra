type StorageBaseAddress = StorageBaseAddress [storable: true, drop: true, dup: true, zero_sized: false];
type StorageAddress = StorageAddress [storable: true, drop: true, dup: true, zero_sized: false];
type u8 = u8 [storable: true, drop: true, dup: true, zero_sized: false];

libfunc storage_address_from_base_and_offset = storage_address_from_base_and_offset;
libfunc store_temp<StorageAddress> = store_temp<StorageAddress>;

storage_address_from_base_and_offset([0], [1]) -> ([2]); // 0
store_temp<StorageAddress>([2]) -> ([2]); // 1
return([2]); // 2

test::foo@0([0]: StorageBaseAddress, [1]: u8) -> (StorageAddress);